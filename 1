-- show cursor line only in active window
vim.api.nvim_create_autocmd({ "InsertLeave", "WinEnter" }, {
	callback = function()
		vim.cmd("hi Cursor guibg=#1e1e2e")
		local ok, cl = pcall(vim.api.nvim_win_get_var, 0, "auto-cursorline")
		local _ok, cc = pcall(vim.api.nvim_win_get_var, 0, "auto-cursorcolumn")
		if ok and cl and cc then
			vim.wo.cursorline = true
			vim.api.nvim_win_del_var(0, "auto-cursorline")
		end
		if _ok and cc then
			vim.wo.cursorcolumn = true
			vim.api.nvim_win_del_var(0, "auto-cursorcolumn")
		end
	end,
})

vim.api.nvim_create_autocmd({ "InsertEnter", "WinLeave" }, {
	callback = function()
		vim.cmd("hi Cursor guibg=#AD6FF7")
		local cl = vim.wo.cursorline
		local cc = vim.wo.cursorcolumn
		if cl then
			vim.api.nvim_win_set_var(0, "auto-cursorline", cl)
			vim.wo.cursorline = false
		end
		if cc then
			vim.api.nvim_win_set_var(0, "auto-cursorcolumn", cc)
			vim.wo.cursorcolumn = false
		end
	end,
})

-- create directories when needed, when saving a file
vim.api.nvim_create_autocmd("BufWritePre", {
	group = vim.api.nvim_create_augroup("auto_create_dir", { clear = true }),
	callback = function(event)
		local file = vim.loop.fs_realpath(event.match) or event.match

		vim.fn.mkdir(vim.fn.fnamemodify(file, ":p:h"), "p")
		local backup = vim.fn.fnamemodify(file, ":p:~:h")
		backup = backup:gsub("[/\\]", "%%")
		vim.go.backupext = backup
	end,
})
-- Auto format
-- vim.api.nvim_create_autocmd({ "CursorMoved" }, {
-- 	pattern = "*.rs",
-- 	callback = function() vim.cmd("silent! update") end,
-- })
vim.api.nvim_create_autocmd("BufRead", {
	callback = function()
		vim.cmd(":lcd%:p")
	end
})
